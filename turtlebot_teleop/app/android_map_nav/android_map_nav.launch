<launch>
  <arg name="base" value="$(optenv TURTLEBOT_BASE kobuki)"/>  <!-- create, roomba -->
  
  <param name="camera/rgb/image_color/compressed/jpeg_quality" value="22"/>

  <!-- Make a slower camera feed available. -->
  <node pkg="topic_tools" type="throttle" name="camera_throttle" output="screen"
        args="messages camera/rgb/image_color/compressed 5"/>

  <node pkg="tf" type="change_notifier" name="tf_throttle_for_android_gui" output="screen">
    <param name="polling_frequency" value="5"/>
    <param name="translational_update_distance" value="-1"/>
    <param name="angular_update_distance" value="-1"/>
    <rosparam param="frame_pairs">
      - {source_frame: base_footprint, target_frame: map}
      - {source_frame: kinect_depth_frame, target_frame: map}
    </rosparam>
  </node>

  <!-- Commenting out for the demo 
  <include file="$(find turtlebot_bringup)/launch/3dsensor.launch"/>
  -->

  <!--- Run Move Base and Robot Pose EKF -->
  <include file="$(find turtlebot_navigation)/launch/includes/_move_base.launch">
    <arg name="base" value="$(arg base)" />
  </include>

  <!-- Load the maps from a warehouse. -->
  <node name="mongo" type="wrapper.py" pkg="mongodb" output="log">
    <param name="database_path" value="warehouse_data"/>
    <param name="overwrite" value="false"/>
    <!--  
     -->
  </node>
  <node pkg="map_store" type="map_manager" name="map_manager" output="screen"/>

  <!--- Run AMCL -->
  <include file="$(find turtlebot_navigation)/launch/includes/_amcl.launch">
    <arg name="use_map_topic" value="true"/>
  </include>
</launch>
